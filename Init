def randomString = {int length ->
    String alphabet = (('A'..'Z')+('a'..'z')+('0'..'9')).join('')
    def rnd = new Random()
    (1..length).collect { alphabet[ rnd.nextInt( alphabet.length() ) ] }.join('')
}

def indexUUID = UUID.randomUUID().toString()

pipeline {
    agent {label 'dispatcher'}
    stages {
        stage('test') {
            steps {
                script {
                    def branches = [:]
                    for(int i=0; i<4; i++){
                        
                        branches["test${i}"] = {
                            build   propagate: false,
                                    job: 'test',
                                    parameters: [
                                        string(name: 'ID', value: indexUUID),
                                    ]
                        }
                    }
                    parallel branches
                }
            }
        }
        // stage('wait files in NAS') {
        //     steps{
        //         script {
        //             dir('/home/dna/jenkins_tokens'){
        //                 waitUntil(quiet:true) { findFiles(glob: '*.agent').length == 2 }
        //             }
        //         }
        //     }
        // }
    }
    // post {
    //     always {
    //         sh 'python3 remove_nas_files.py'
    //         echo "FINISH"
    //     }
    // }
}